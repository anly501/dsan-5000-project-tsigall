clf = tree.DecisionTreeClassifier(random_state = 621, max_depth = 5)
clf = tree.DecisionTreeClassifier(random_state = 621, max_depth = 5)
clf.fit(x_train, y_train)
class_names=[str(class_) for class_ in Y.unique()])
viz = dtreeviz.model(clf,
X_train = x_train, y_train = y_train,
target_name="go",
feature_names=list(X.columns),
class_names=[str(class_) for class_ in Y.unique()])
features = ['game_half', 'half_seconds_remaining', 'ydstogo', 'yardline_100', 'score_diff']
target = "go"
clf = tree.DecisionTreeClassifier(random_state = 621, max_depth = 5)
clf.fit(x_train, y_train)
viz = dtreeviz.model(clf,
X_train = x_train, y_train = y_train,
target_name="go",
feature_names=list(X.columns),
class_names=[str(class_) for class_ in Y.unique()])
