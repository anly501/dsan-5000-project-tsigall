ggtitle("When NFL Coaches Go When They Should") +
xlab("") +
stat_bin(binwidth = 0.05,
geom='text',
aes(label=ifelse(..count.. != 0, ..count.., "")),
vjust = 1.2)
p1 <- ggplot(data = fourth_decisions, aes(x = shouldnt_go)) +
geom_histogram(binwidth = 0.05, fill = "#69b3a2", color="#e9ecef") +
scale_x_continuous(limits =c(0, 1.05), breaks = seq(0, 1, by = 0.1)) +
ggtitle("When NFL Coaches Don't Go When They Shouldn't") +
xlab("") +
stat_bin(binwidth = 0.05,
geom='text',
aes(label=ifelse(..count.. != 0, ..count.., "")),
vjust = 1.3)
grid.arrange(p, p1, ncol = 1)
p <- ggplot(data = fourth_decisions, aes(x = should_go)) +
geom_histogram(binwidth = 0.05, fill = "#69b3a2", color="#e9ecef") +
scale_x_continuous(limits =c(0, 1.1), breaks = seq(0, 1, by = 0.1)) +
ggtitle("When NFL Coaches Go When They Should") +
xlab("") +
stat_bin(binwidth = 0.05,
geom='text',
aes(label=ifelse(..count.. != 0, ..count.., "")),
vjust = 1.2)
p1 <- ggplot(data = fourth_decisions, aes(x = shouldnt_go)) +
geom_histogram(binwidth = 0.05, fill = "#69b3a2", color="#e9ecef") +
scale_x_continuous(limits =c(0, 1.05), breaks = seq(0, 1, by = 0.1)) +
ggtitle("When NFL Coaches Don't Go When They Shouldn't") +
xlab("") +
stat_bin(binwidth = 0.05,
geom='text',
aes(label=ifelse(..count.. != 0, ..count.., "")),
vjust = 1.3)
grid.arrange(p, p1, ncol = 1)
fourth_position <- fourth_downs %>%
mutate(should_go = ifelse((go_boost > 0),
(if_else(go == 100, 1, 0)),
NA),
shouldnt_go = ifelse((go_boost < 0),
(if_else(go == 0, 1, 0)),
NA)) %>%
select(yardline_100,
ydstogo,
go,
should_go,
shouldnt_go)
fourth_position <- fourth_downs %>%
mutate(should_go = ifelse((go_boost > 0),
(if_else(go == 100, 1, 0)),
NA),
shouldnt_go = ifelse((go_boost < 0),
(if_else(go == 0, 1, 0)),
NA)) %>%
select(yardline_100,
ydstogo,
go,
go_boost,
should_go,
shouldnt_go) %>%
group_by(yardline_100, ydstogo) %>%
summarize(go = mean(go),
count = n(),
go_boost = mean(go_boost))
head(fourth_position)
View(fourth_downs)
fourth_position <- fourth_downs %>%
mutate(should_go = ifelse((go_boost > 0),
(if_else(go == 100, 1, 0)),
NA),
shouldnt_go = ifelse((go_boost < 0),
(if_else(go == 0, 1, 0)),
NA)) %>%
select(yardline_100,
ydstogo,
go,
go_boost,
should_go,
shouldnt_go) %>%
group_by(yardline_100, ydstogo) %>%
summarize(go = mean(go),
count = n(),
go_boost = mean(go_boost))
head(fourth_position)
save(fourth_decisions, fourth_downs, fourth_position, file = "clean_data.Rdata")
load("clean_data.Rdata")
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go:", go, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Change in <br>Win Probability")
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Change in <br>Win Probability")
View(fourth_position)
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Change in <br>Win Probability", limits = c(-2, 2))
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Change in <br>Win Probability", limits = c(min, max))
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Change in <br>Win Probability", limits = c(0, max))
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Change in <br>Win Probability", limits = c(min, 0, max))
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go",
coloraxis = list(colorbar = list(len = 0.6,
y = 0.2),
cmin = -max,
cmax = max))) %>%
colorbar(title = "Change in <br>Win Probability", limits = c(min, 0, max))
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go_boost,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go",
coloraxis = list(colorbar = list(len = 0.6,
y = 0.2),
cmin = -max,
cmax = max))) %>%
colorbar(title = "Change in <br>Win Probability")
library(scales)
set.seed(621)
colorlength <- 100
null_value <- (0 - min) / (max - min)
border <- as.integer(null_value * colorlength)
colorscale <- as.list(1:colorlength)
if(border < colorlength / 2) {
border_neg <- colorlength - border_neg
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i + border_neg - border - 1])
}
}
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5,
color = ~go_boost,
colorscale = colorscale,
colorbar = list(len = 1))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go"))
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
set.seed(621)
colorlength <- 100
null_value <- (0 - min) / (max - min)
border <- as.integer(null_value * colorlength)
colorscale <- as.list(1:colorlength)
if(border < colorlength / 2) {
border_neg <- colorlength - border_neg
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i + border_neg - border - 1])
}
} else {
border_neg <- border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border_neg) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i])
}
## colorscale above zero
border_pos <- colorlength - border
s <- scales::seq_gradient_pal("#FFFFFF", "#008000", "Lab")(seq(0,1,length.out=border))
for (i in 1:border_pos) {
colorscale[[i + border]] <- c((i + border) / colorlength, s[i])
}
}
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5,
color = ~go_boost,
colorscale = colorscale,
colorbar = list(len = 1))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go"))
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
set.seed(621)
colorlength <- 100
null_value <- (0 - min) / (max - min)
border <- as.integer(null_value * colorlength)
colorscale <- as.list(1:colorlength)
if(border < colorlength / 2) {
border_neg <- colorlength - border_neg
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i + border_neg - border - 1])
}
} else {
border_neg <- border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border_neg) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i])
}
## colorscale above zero
border_pos <- colorlength - border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=border))
for (i in 1:border_pos) {
colorscale[[i + border]] <- c((i + border) / colorlength, s[i])
}
}
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5,
color = ~go_boost,
colorscale = colorscale,
colorbar = list(len = 1))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go"))
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
set.seed(621)
colorlength <- 100
null_value <- (0 - min) / (max - min)
border <- as.integer(null_value * colorlength)
colorscale <- as.list(1:colorlength)
if(border < colorlength / 2) {
border_neg <- colorlength - border_neg
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i + border_neg - border - 1])
}
border_pos <- border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=colorlength - border_pos))
for (i in 1:(colorlength - border_pos)) {
colorscale[[i + border_pos]] <- c((i + border) / colorlength, s[i])
}
} else {
border_neg <- border
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border_neg) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i])
}
## colorscale above zero
border_pos <- colorlength - border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=border))
for (i in 1:border_pos) {
colorscale[[i + border]] <- c((i + border) / colorlength, s[i])
}
}
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5,
color = ~go_boost,
colorscale = colorscale,
colorbar = list(len = 1))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go"))
fourth_position <- fourth_downs %>%
mutate(should_go = ifelse((go_boost > 0),
(if_else(go == 100, 1, 0)),
NA),
shouldnt_go = ifelse((go_boost < 0),
(if_else(go == 0, 1, 0)),
NA)) %>%
select(yardline_100,
ydstogo,
go,
go_boost,
should_go,
shouldnt_go) %>%
group_by(yardline_100, ydstogo) %>%
summarize(go = mean(go),
count = n(),
go_boost = mean(go_boost)) %>%
filter(go_boost < -20)
head(fourth_position)
save(fourth_decisions, fourth_downs, fourth_position, file = "clean_data.Rdata")
load("clean_data.Rdata")
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go:", go, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Conversions <br>Attempted")
View(fourth_position)
fourth_position <- fourth_downs %>%
mutate(should_go = ifelse((go_boost > 0),
(if_else(go == 100, 1, 0)),
NA),
shouldnt_go = ifelse((go_boost < 0),
(if_else(go == 0, 1, 0)),
NA)) %>%
select(yardline_100,
ydstogo,
go,
go_boost,
should_go,
shouldnt_go) %>%
group_by(yardline_100, ydstogo) %>%
summarize(go = mean(go),
count = n(),
go_boost = mean(go_boost)) %>%
filter(go_boost > -20)
head(fourth_position)
save(fourth_decisions, fourth_downs, fourth_position, file = "clean_data.Rdata")
load("clean_data.Rdata")
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go:", go, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5),
color = ~go,
colors = (c("#FF0000", "#ecf54e", "#008000"))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go")) %>%
colorbar(title = "Conversions <br>Attempted")
# https://stackoverflow.com/questions/43505146/how-to-force-map-zero-to-white-color-in-r-plotly-color-scale was used to get the color scale right
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
set.seed(621)
colorlength <- 100
null_value <- (0 - min) / (max - min)
border <- as.integer(null_value * colorlength)
colorscale <- as.list(1:colorlength)
if(border < colorlength / 2) {
border_neg <- colorlength - border_neg
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i + border_neg - border - 1])
}
border_pos <- border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=colorlength - border_pos))
for (i in 1:(colorlength - border_pos)) {
colorscale[[i + border_pos]] <- c((i + border) / colorlength, s[i])
}
} else {
border_neg <- border
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border_neg) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i])
}
## colorscale above zero
border_pos <- colorlength - border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=border))
for (i in 1:border_pos) {
colorscale[[i + border]] <- c((i + border) / colorlength, s[i])
}
}
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5,
color = ~go_boost,
colorscale = colorscale,
colorbar = list(len = 1))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go"))
# https://stackoverflow.com/questions/43505146/how-to-force-map-zero-to-white-color-in-r-plotly-color-scale was used to get the color scale right
min <- min(fourth_position$go_boost)
max <- max(fourth_position$go_boost)
set.seed(621)
colorlength <- 100
null_value <- (0 - min) / (max - min)
border <- as.integer(null_value * colorlength)
colorscale <- as.list(1:colorlength)
if(border < colorlength / 2) {
border_neg <- colorlength - border_neg
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i + border_neg - border - 1])
}
border_pos <- border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=colorlength - border_pos))
for (i in 1:(colorlength - border_pos)) {
colorscale[[i + border_pos]] <- c((i + border) / colorlength, s[i])
}
} else {
border_neg <- border
s <- scales::seq_gradient_pal("#FF0000", "#ecf54e", "Lab")(seq(0,1,length.out=border_neg))
for (i in 1:border_neg) {
colorscale[[i]] <- c((i - 1) / colorlength, s[i])
}
## colorscale above zero
border_pos <- colorlength - border
s <- scales::seq_gradient_pal("#ecf54e", "#008000", "Lab")(seq(0,1,length.out=border))
for (i in 1:border_pos) {
colorscale[[i + border]] <- c((i + border) / colorlength, s[i])
}
}
plot_ly(data = fourth_position,
x = ~yardline_100,
y = ~ydstogo,
text = ~paste("go_boost:", go_boost, "<br>count:", count),
type = "scatter",
mode = "markers",
marker = list(size = 5,
color = ~go_boost,
colorscale = colorscale,
colorbar = list(len = 1))) %>%
layout(title = "When Coaches Actually Go For It",
xaxis = list(title = "Yardline"),
yaxis = list(title = "Yards to Go"))
