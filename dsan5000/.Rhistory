import json
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import silhouette_samples, silhouette_score
from sklearn.decomposition import PCA
X = pd.read_csv("PCA.csv")
X = X("coach", axis = 1)
X = X.drop("punt_wp", axis = 1)
print('NUMERIC MEAN:\n',np.mean(X,axis=0))
print("X SHAPE",X.shape)
X = X("coach", axis = 1)
X = X.drop("coach", axis = 1)
X = X.drop("punt_wp", axis = 1)
print('NUMERIC MEAN:\n',np.mean(X,axis=0))
print("X SHAPE",X.shape)
pca = PCA(n_components = 2).fit(X)
Xp = pca.transform(X)
Xp_df = pd.DataFrame(Xp, columns = ['x', 'y'])
View(Xp_df)
pca_scatter = sns.scatterplot(data=Xp_df, x="x", y="y", color='black')
pca_scatter.set_xlim((-1,1));
pca_scatter.set_ylim((-1,1));
custom_ticks = [-1,-0.8,-0.6,-0.4,-0.2,0,0.2,0.4,0.6,0.8,1]
pca_scatter.set_xticks(custom_ticks)
pca_scatter.set_yticks(custom_ticks)
pca_scatter.set_xlabel("First Principal Component")
pca_scatter.set_ylabel("Second Principal Component")
plt.axhline(0, color='black', alpha=0.5)
plt.axvline(0, color='black', alpha=0.5)
sns.rugplot(data=Xp_df, x="x", y="y", color='black')
plt.tight_layout()
plt.show()
import seaborn as sns
pca_scatter = sns.scatterplot(data=Xp_df, x="x", y="y", color='black')
pca_scatter.set_xticks(custom_ticks)
pca_scatter.set_yticks(custom_ticks)
pca_scatter.set_xlabel("First Principal Component")
pca_scatter.set_ylabel("Second Principal Component")
plt.axhline(0, color='black', alpha=0.5)
plt.axvline(0, color='black', alpha=0.5)
sns.rugplot(data=Xp_df, x="x", y="y", color='black')
plt.tight_layout()
plt.show()
custom_ticks_x = [-900,-450,0,450,900]
custom_ticks_y = [-60,-30,0,30,60]
pca_scatter = sns.scatterplot(data=Xp_df, x="x", y="y", color='black')
pca_scatter.set_xticks(custom_ticks_x)
pca_scatter.set_yticks(custom_ticks_y)
pca_scatter.set_xlabel("First Principal Component")
pca_scatter.set_ylabel("Second Principal Component")
plt.axhline(0, color='black', alpha=0.5)
plt.axvline(0, color='black', alpha=0.5)
sns.rugplot(data=Xp_df, x="x", y="y", color='black')
plt.tight_layout()
plt.show()
