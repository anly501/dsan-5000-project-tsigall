library(plotly)
library(reticulate)
knitr::opts_chunk$set(echo = FALSE)
load("raw_nfl.Rdata")
df <- raw_data %>%
filter(!is.na(go_boost) & !is.na(go)) %>%
select(season, home_coach, away_coach, posteam, defteam, posteam_type, game_half, half_seconds_remaining, ydstogo, yardline_100, posteam_score, defteam_score, posteam, go_boost, go, epa, wp_fail, wp_succeed, wp, fg_make_prob, miss_fg_wp, make_fg_wp, punt_wp)
df <- df %>%
mutate(coach = if_else(posteam_type == "home", home_coach, away_coach),
home_coach = coach,
score_diff = posteam_score - defteam_score,
go = if_else(go == 100, 1, 0),
game_half = if_else(game_half == "Half1", 1, 2)) %>%
select(-coach,
-away_coach,
-season,
-posteam,
-defteam,
-posteam_type,
-epa,
-punt_wp,
-posteam_score,
-defteam_score) %>%
rename(coach = home_coach) %>%
select(-go, everything())
reticulate::repl_python()
ggplot(data = py$Xp_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "First Principal Component", y = "Second Principal Component") +
geom_abline(intercept = 1, slope = 0.3, color = "black", linewidth = 1.5) +
theme_minimal()
reticulate::repl_python()
py$X_embedded
head(py$X_embedded)
head(py$X_embedded[,1])
ggplot(data = py$X_embedded, aes(x = X_embedded[,1], y = X_embedded,2, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
reticulate::repl_python()
ggplot(data = py$Xe_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
reticulate::repl_python()
ggplot(data = py$Xe_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
reticulate::repl_python()
library(tidyverse)
library(plotly)
library(reticulate)
knitr::opts_chunk$set(echo = FALSE)
load("raw_nfl.Rdata")
df <- raw_data %>%
filter(!is.na(go_boost) & !is.na(go)) %>%
select(season, home_coach, away_coach, posteam, defteam, posteam_type, game_half, half_seconds_remaining, ydstogo, yardline_100, posteam_score, defteam_score, posteam, go_boost, go, epa, wp_fail, wp_succeed, wp, fg_make_prob, miss_fg_wp, make_fg_wp, punt_wp)
df <- df %>%
mutate(coach = if_else(posteam_type == "home", home_coach, away_coach),
home_coach = coach,
score_diff = posteam_score - defteam_score,
go = if_else(go == 100, 1, 0),
game_half = if_else(game_half == "Half1", 1, 2)) %>%
select(-coach,
-away_coach,
-season,
-posteam,
-defteam,
-posteam_type,
-epa,
-punt_wp,
-posteam_score,
-defteam_score) %>%
rename(coach = home_coach) %>%
select(-go, everything())
reticulate::repl_python()
ggplot(data = py$Xp_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "First Principal Component", y = "Second Principal Component") +
geom_abline(intercept = 1, slope = 0.3, color = "black", linewidth = 1.5) +
theme_minimal()
reticulate::repl_python()
p5 <- ggplot(data = py$X5_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
p10 <- ggplot(data = py$X10_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
p20 <- ggplot(data = py$X20_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
p30 <- ggplot(data = py$X30_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
p40 <- ggplot(data = py$X40_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
p50 <- ggplot(data = py$X50_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal()
p5
p10
p20
p30
p40
p50
p5 <- ggplot(data = py$X5_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 5")
p5
p5 <- ggplot(data = py$X5_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 5")
p10 <- ggplot(data = py$X10_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 10")
p20 <- ggplot(data = py$X20_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 20")
p30 <- ggplot(data = py$X30_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 30")
p40 <- ggplot(data = py$X40_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 40")
p50 <- ggplot(data = py$X50_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point() +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 50")
p5
p10
p20
p30
p40
p50
p50 <- ggplot(data = py$X50_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 1) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 50")
p50
p50 <- ggplot(data = py$X50_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 50")
p50
p40
p5
p10
p20
p30
p40
p50
p5 <- ggplot(data = py$X5_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 5")
p10 <- ggplot(data = py$X10_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 10")
p20 <- ggplot(data = py$X20_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 20")
p30 <- ggplot(data = py$X30_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 30")
p40 <- ggplot(data = py$X40_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 40")
p50 <- ggplot(data = py$X50_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "x", y = "y") +
theme_minimal() +
ggtitle("Perplexity = 50")
p5
p10
p20
p30
p40
p50
ggplot(data = py$Xp_df, aes(x = x, y = y, color = factor(py$Y))) +
geom_point(size = 0.5) +
scale_color_manual(values = c("red", "darkgreen"),
name = "Conversion Attempted",
labels = c("No", "Yes")) +
labs(x = "First Principal Component", y = "Second Principal Component") +
geom_abline(intercept = 1, slope = 0.3, color = "black", linewidth = 1.5) +
theme_minimal()
library(gridExtra)
grid.arrange(
p5,
p10,
p20,
p30,
p40,
p50,
ncol = 3)
grid.arrange(
p5,
p10,
p20,
p30,
p40,
p50,
ncol = 2)
grid.arrange(p5,
p10,
ncol = 2)
grid.arrange(p5,
p10,
ncol = 1)
save(py$X5_df,
py$X10_df,
py$X20_df,
py$X30_df,
py$X40_df,
py$X50_df,
file = "tsne.Rdata")
save(c(py$X5_df,
py$X10_df,
py$X20_df,
py$X30_df,
py$X40_df,
py$X50_df),
file = "tsne.Rdata")
library(reticulate)
save(py$X5_df,
py$X10_df,
py$X20_df,
py$X30_df,
py$X40_df,
py$X50_df,
file = "tsne.Rdata")
head(py$X5_df)
save(py$X5_df,
py$X10_df,
py$X20_df,
py$X30_df,
py$X40_df,
py$X50_df,
file = "tsne.Rdata")
save(py$X5_df,
file = "tsne.Rdata")
save(py$X10_df,
file = "tsne.Rdata")
X5 <- py$X5_df
X10 <- py$X10_df
X20 <- py$X20_df
X30 <- py$X30_df
X40 <- py$X40_df
X50 <- py$X50_df
save(X5,
X10,
X20,
X30,
X40,
X50,
file = "tsne.Rdata")
library(tidyverse)
library(plotly)
knitr::opts_chunk$set(echo = FALSE)
load("clean_data.Rdata")
fourth_by_coach <- fourth_decisions %>%
group_by(coach) %>%
summarize(should_go = mean(should_go),
shouldnt_go = mean(shouldnt_go)) %>%
ungroup()
head(fourth_by_coach)
plot_ly(data = fourth_by_coach, x = ~should_go, y = ~shouldnt_go, type = "scatter", mode = "markers")
write_csv(fourth_by_coach, file = "fourth_by_coach.csv")
reticulate::repl_python()
labels <- read_csv("labels.csv", show_col_types = FALSE)
count <- fourth_decisions %>%
group_by(coach) %>%
summarize(count = sum(count)) %>%
ungroup()
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count$count,
labels = labels$"0")
category_labels <- c("Passive", "Aggresive", "Impulsive", "Strategic")
fourth_by_coach$labels <- factor(fourth_by_coach$labels)
fourth_by_coach$labels <- category_labels[fourth_by_coach$labels]
hover <- paste(fourth_by_coach$coach,
"<br>Count: ", fourth_by_coach$count)
p1 <- ggplot(data = fourth_by_coach) +
geom_point(aes(x = should_go, y = shouldnt_go, color = labels, text = hover)) +
xlab("Should Go Correct Rate") +
ylab("Shouldn't Go Correct Rate") +
scale_x_continuous(breaks = seq(0.15, 0.55, by = 0.05)) +
scale_y_continuous(breaks = seq(0.85, 1, by = 0.01)) +
scale_color_brewer(palette = "Dark2")
ggplotly(p1)  %>%
layout(legend = list(title = list(text = "Category")))
reticulate::repl_python()
labels <- py$labels
library(reticulate)
labels <- py$labels
labels <- py$labels
count <- fourth_decisions %>%
group_by(coach) %>%
summarize(count = sum(count)) %>%
ungroup()
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count$count,
labels = labels$"0")
View(fourth_by_coach)
labels <- py$labels
count <- fourth_decisions %>%
group_by(coach) %>%
summarize(count = sum(count)) %>%
ungroup()
View(count)
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count$count,
labels = labels$labels)
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count,
labels = labels$labels)
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count,
labels = labels)
View(fourth_by_coach)
labels <- py$labels
View(labels)
count <- fourth_decisions %>%
group_by(coach) %>%
summarize(count = sum(count)) %>%
ungroup()
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count,
labels = labels)
category_labels <- c("Passive", "Aggresive", "Impulsive", "Strategic")
fourth_by_coach$labels <- factor(fourth_by_coach$labels)
fourth_by_coach$labels <- category_labels[fourth_by_coach$labels]
hover <- paste(fourth_by_coach$coach,
"<br>Count: ", fourth_by_coach$count)
p1 <- ggplot(data = fourth_by_coach) +
geom_point(aes(x = should_go, y = shouldnt_go, color = labels, text = hover)) +
xlab("Should Go Correct Rate") +
ylab("Shouldn't Go Correct Rate") +
scale_x_continuous(breaks = seq(0.15, 0.55, by = 0.05)) +
scale_y_continuous(breaks = seq(0.85, 1, by = 0.01)) +
scale_color_brewer(palette = "Dark2")
ggplotly(p1)  %>%
layout(legend = list(title = list(text = "Category")))
labels <- py$labels
count <- fourth_decisions %>%
group_by(coach) %>%
summarize(count = sum(count)) %>%
ungroup()
load("clean_data.Rdata")
View(fourth_by_coach)
library(tidyverse)
library(plotly)
library(reticulate)
knitr::opts_chunk$set(echo = FALSE)
load("clean_data.Rdata")
fourth_by_coach <- fourth_decisions %>%
group_by(coach) %>%
summarize(should_go = mean(should_go),
shouldnt_go = mean(shouldnt_go)) %>%
ungroup()
head(fourth_by_coach)
plot_ly(data = fourth_by_coach, x = ~should_go, y = ~shouldnt_go, type = "scatter", mode = "markers")
write_csv(fourth_by_coach, file = "fourth_by_coach.csv")
reticulate::repl_python()
labels <- py$labels
count <- fourth_decisions %>%
group_by(coach) %>%
summarize(count = sum(count)) %>%
ungroup()
fourth_by_coach <- fourth_by_coach %>%
mutate(count = count,
labels = labels)
category_labels <- c("Passive", "Aggresive", "Impulsive", "Strategic")
fourth_by_coach$labels <- factor(fourth_by_coach$labels)
fourth_by_coach$labels <- category_labels[fourth_by_coach$labels]
hover <- paste(fourth_by_coach$coach,
"<br>Count: ", fourth_by_coach$count)
p1 <- ggplot(data = fourth_by_coach) +
geom_point(aes(x = should_go, y = shouldnt_go, color = labels, text = hover)) +
xlab("Should Go Correct Rate") +
ylab("Shouldn't Go Correct Rate") +
scale_x_continuous(breaks = seq(0.15, 0.55, by = 0.05)) +
scale_y_continuous(breaks = seq(0.85, 1, by = 0.01)) +
scale_color_brewer(palette = "Dark2")
ggplotly(p1)  %>%
layout(legend = list(title = list(text = "Category")))
View(fourth_by_coach)
View(labels)
library(tidyverse)
library(plotly)
library(reticulate)
knitr::opts_chunk$set(echo = FALSE)
load("clean_data.Rdata")
fourth_by_coach <- fourth_decisions %>%
group_by(coach) %>%
summarize(should_go = mean(should_go),
shouldnt_go = mean(shouldnt_go)) %>%
ungroup()
head(fourth_by_coach)
plot_ly(data = fourth_by_coach, x = ~should_go, y = ~shouldnt_go, type = "scatter", mode = "markers")
write_csv(fourth_by_coach, file = "fourth_by_coach.csv")
reticulate::repl_python()
